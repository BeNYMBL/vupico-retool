id: impactByLifestage
type: function
subtype: Function
template:
  ordered:
    - funcBody: >-
        const impactFactor = {{selectImpact2.value}}

        const s1 = {{getSingleScenario1.data}}

        const s2 = {{getSingleScenario2.data}}
          
        // LS01 Material Acquisition

        const s1_ls1_bom =
        {{getSingleScenario1.data.output_ls1.bom_material_breakdown}}

        const s1_ls1_ups =
        {{getSingleScenario1.data.output_ls1.upstream_breakdown}}

        const s2_ls1_bom =
        {{getSingleScenario2.data.output_ls1.bom_material_breakdown}}

        const s2_ls1_ups =
        {{getSingleScenario2.data.output_ls1.upstream_breakdown}}

          
        const s1_bomCO2 = _.sum(s1_ls1_bom.map((val) =>
        parseFloat(val[impactFactor])))

        const s1_upsCO2 = _.sum(s1_ls1_ups.map((val) =>
        parseFloat(val[impactFactor])))

        const s2_bomCO2 = _.sum(s2_ls1_bom.map((val) =>
        parseFloat(val[impactFactor])))

        const s2_upsCO2 = _.sum(s2_ls1_ups.map((val) =>
        parseFloat(val[impactFactor])))




        // LIFESTAGE 02 Manufacturing

        const s1_ls2 =
        {{getSingleScenario1.data.output_ls2.plant_production_breakdown}}

        const s2_ls2 =
        {{getSingleScenario2.data.output_ls2.plant_production_breakdown}}


        const s1_ls2_impact = _.sum(s1_ls2.map((val) =>
        parseFloat(val[impactFactor]) || 0))

        const s2_ls2_impact = _.sum(s2_ls2.map((val) =>
        parseFloat(val[impactFactor]) || 0))


        //LIFESTAGE 03 Distribution

        const s1_ls3 =
        {{getSingleScenario1.data.output_ls3.dowmstream_transportation_total}}

        const s2_ls3 =
        {{getSingleScenario2.data.output_ls3.dowmstream_transportation_total}}


        const s1_ls3_impact = _.sum(s1_ls3.map((val) =>
        parseFloat(val[impactFactor])))

        const s2_ls3_impact = _.sum(s2_ls3.map((val) =>
        parseFloat(val[impactFactor])))


        //LIFESTAGE 04 End Of Life

        const s1_ls4 =
        {{getSingleScenario1.data.output_ls4.wasteTransportationTotal}}

        const s2_ls4 =
        {{getSingleScenario2.data.output_ls4.wasteTransportationTotal}}


        const s1_ls4_impact = _.sum(s1_ls4.map((val) =>
        parseFloat(val[impactFactor])))

        const s2_ls4_impact = _.sum(s2_ls4.map((val) =>
        parseFloat(val[impactFactor])))




        // Totals

        const s1total = s1_bomCO2 + s1_upsCO2 + s1_ls2_impact + s1_ls3_impact +
        s1_ls4_impact

        const s2total = s2_bomCO2 + s2_upsCO2 + s2_ls2_impact + s2_ls3_impact +
        s2_ls4_impact


        console.log('jp log',s2_ls4_impact)


        const ls1_return = [
          { 
            id: s1.name,
            type: 'Material Acquisition',
            impact: _.startCase(impactFactor),
            value: ((s1_bomCO2 + s1_upsCO2) / s1total) * 100
          },
          {
            id: s2.name,
            type: 'Material Acquisition',
            impact: _.startCase(impactFactor),
            value: ((s2_bomCO2 + s2_upsCO2) / s2total) * 100
          }
        ]




        const ls2_return = [
          { 
            id: s1.name,
            type: 'Manufacturing',
           impact: _.startCase(impactFactor),
            value: (s1_ls2_impact / s1total) * 100
          },
          {
            id: s2.name,
            type: 'Manufacturing',
            impact: _.startCase(impactFactor),
            value: (s2_ls2_impact / s2total) * 100
          }
        ]


        const ls3_return = [
          { 
            id: s1.name,
            type: 'Distribution',
           impact: _.startCase(impactFactor),
            value: (s1_ls3_impact / s1total) * 100
          },
          {
            id: s2.name,
            type: 'Distribution',
            impact: _.startCase(impactFactor),
            value: (s2_ls3_impact / s2total) * 100
          }
        ]


        const ls4_return = [
          { 
            id: s1.name,
            type: 'Disposal',
           impact: _.startCase(impactFactor),
            value: (s1_ls4_impact / s1total) * 100
          },
          {
            id: s2.name,
            type: 'Disposal',
            impact: _.startCase(impactFactor),
            value: (s2_ls4_impact / s2total) * 100
          }
        ]
         
        return _.concat(ls1_return,ls2_return,ls3_return,ls4_return)
    - value: ''
createdAt: 2023-01-18T18:38:21.620Z
