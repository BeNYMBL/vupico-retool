id: prep_getDownstreamWaste
type: datasource
subtype: SqlQueryUnified
resourceName: 6e21e4e9-402f-4ead-a4f9-55cbbfd992d9
resourceDisplayName: Vupico-Database-1
template:
  ordered:
    - queryRefreshTime: ''
    - records: ''
    - lastReceivedFromResourceAt: null
    - databasePasswordOverride: ''
    - queryDisabledMessage: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - resourceNameOverride: ''
    - runWhenModelUpdates: true
    - showFailureToaster: false
    - query: >-
        select 

        sd.id, 

        sd.material_code,

        m.material_name,

        c.name as customer_name, 

        cust_country.country_code,

        cust_country.country as customer_country_name,

        sd.quantity,

        case when (sd.loss_percent is null) then 1.00 * ml.loss_percent / 100
        else 1.00 * sd.loss_percent / 100 end as loss_percent,

        case when (sd.waste_percent is null) then 1.00 * ml.waste_percent / 100
        else 1.00 * sd.waste_percent / 100 end as waste_percent,

        case when (sd.loss_percent is null) then sd.quantity * (1.00 *
        ml.loss_percent / 100) else sd.quantity * (1.00 * sd.loss_percent / 100)
        end as loss_product,

        case when (sd.waste_percent is null) then sd.quantity * (1.00 *
        ml.waste_percent / 100) else sd.quantity * (1.00 * sd.waste_percent /
        100) end as waste,

        r.recycle_percent as recyclability_percent,

        r.collection_percent as collection_percent,

        case when (sd.waste_percent is null) then sd.quantity * (1.00 *
        ml.waste_percent / 100) * r.recycle_percent else sd.quantity * (1.00 *
        sd.waste_percent / 100) * r.recycle_percent end as total_recycle,

        case when (sd.waste_percent is null) then sd.quantity * (1.00 *
        ml.waste_percent / 100) * r.collection_percent else sd.quantity * (1.00
        * sd.waste_percent / 100) * r.collection_percent end as total_waste

        from scenario_distribution sd

        inner join customer c on sd.destination_customer_code = c.customer_code

        inner join material m on sd.material_code = m.material_code

        inner join country cust_country on c.location_code =
        cust_country.location_code

        inner join material_lifestage ml on sd.material_code = ml.material_code

        inner join recyclability r on sd.material_code = r.material_code and
        cust_country.country_code = r.country_code

        where ml.lifestage_code = 'LS006'

        and sd.scenario_id = {{ variable0 }}
    - playgroundQueryUuid: 81fc9c42-d284-4395-a3a8-a59e387ab42b
    - playgroundQueryId: 37
    - error: null
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - warningCodes: []
    - data: null
    - recordId: ''
    - retoolVersion: 2.99.3
    - importedQueryInputs:
        ordered:
          - variable0: '{{input_scenario_id.value}}'
    - isImported: true
    - showSuccessToaster: true
    - dataArray: []
    - cacheKeyTtl: ''
    - filterBy: ''
    - databaseHostOverride: ''
    - metadata: null
    - editorMode: sql
    - actionType: ''
    - changesetObject: ''
    - shouldUseLegacySql: false
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - databaseNameOverride: ''
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams: []
    - enableErrorTransformer: false
    - enableBulkUpdates: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - bulkUpdatePrimaryKey: ''
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events: []
    - tableName: ''
    - queryTimeout: '10000'
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - databaseUsernameOverride: ''
    - shouldEnableBatchQuerying: false
    - doNotThrowOnNoOp: false
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2022-12-16T16:33:15.458Z
folder: Waste_Product_Sold
